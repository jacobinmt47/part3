{"version":3,"sources":["services/person.js","components/Notification.js","App.js","index.js"],"names":["baseurl","persons","setPersons","setErrorMsg","console","log","axios","get","then","response","data","catch","error","person","setNewName","setNewPhone","successMsg","name","phone_len","phonenumber","length","name_len","post","x","concat","setp","p","filter","id","setTimeout","delete","pNew","np","put","Notification","props","includes","className","Names","people","toLowerCase","Array","isArray","fp","map","key","onClick","PhoneFilter","value","filterName","onChange","handleFilterChange","PersonForm","onSubmit","addName","newName","handlePersonChange","newPhone","handlePhoneChange","type","App","useState","setFilterName","errorMsg","useEffect","pServices","event","target","preventDefault","Math","floor","random","isNew","findIndex","astring","window","confirm","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6bc14f4f.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseurl =\"/api/persons\"\r\n\r\nconst getAll = (persons,setPersons,setErrorMsg) =>{\r\n    console.log(\"getAll called\")\r\n    axios.get(baseurl)\r\n    .then(response =>{\r\n        console.log(\"promise fullfilled\")\r\n        if(persons ===''){\r\n         console.log(\"empty persons\") \r\n         setPersons(response.data)  \r\n        }\r\n    })\r\n    .catch(error =>\r\n        {console.log(error)\r\n          setErrorMsg('get all failed')\r\n        })\r\n}\r\n\r\nconst add = (person,persons,setPersons,setNewName,setNewPhone,setErrorMsg) =>{\r\n    const successMsg ='success '+person.name+' added'\r\n    const phone_len = person.phonenumber.length\r\n    const name_len = person.name.length\r\n    if(phone_len >7 && name_len >2){\r\n    axios.post(baseurl,person)\r\n    .then((response) =>{\r\n        const x = persons.concat(response.data)\r\n        setPersons(x)\r\n        setNewName('')\r\n        setNewPhone('')\r\n        setErrorMsg(successMsg)\r\n    })\r\n    .catch(error =>\r\n        {console.log(error)\r\n            setErrorMsg('add failed')\r\n        })\r\n    }\r\n    else{setErrorMsg('phone number must be at least 8 charaters and name at least 3')}\r\n\r\n}\r\nconst del=(person,persons,setPersons,setErrorMsg) =>{\r\n    const setp = () => {\r\n        let p = persons.filter(x =>x.id !== person.id)\r\n        setPersons(p)\r\n        setTimeout(()=>{setErrorMsg(null)},5000)\r\n    }\r\n    axios.delete(baseurl+'/'+person.id)\r\n    .then(response =>{\r\n        console.log(response)\r\n        setp()\r\n    })\r\n    .catch(error =>\r\n        {\r\n        console.log(error)\r\n        setErrorMsg(person.name+' is already deleted')\r\n        setp()\r\n    })\r\n        \r\n}\r\n\r\nconst update=(person,persons,setPersons,setNewName,setNewPhone,setErrorMsg) =>{\r\nconst p = persons.filter(x=>x.name === person.name) // used to get id of old person\r\nlet pNew = p[0]\r\nperson.id = pNew.id\r\n//pNew.phoneNumber =person.phoneNumber\r\nlet np = persons.filter(x =>x.id !== p[0].id)\r\nnp = np.concat(person)\r\nconsole.log(person,'-----')\r\n//console.log(pNew)\r\nsetPersons(np)\r\nsetNewName('')\r\nsetNewPhone('')\r\naxios.put(baseurl+\"/\"+person.id,person)\r\n.then(response =>{\r\n    console.log(response)\r\n    setErrorMsg('success '+p[0].name+' updated')\r\n})\r\n.catch(error =>\r\n    {console.log(error)\r\n    setErrorMsg('update failed')\r\n    })\r\n\r\n}\r\nexport default{getAll,add,del,update}","import React from 'react'\r\n\r\nconst Notification = (props) => {\r\n    if (props.error === null){\r\n        return null\r\n    }\r\n    if(typeof(props.error)==='string'){\r\n    if(props.error.includes('success')){\r\n        return(\r\n            <li className='success' >\r\n                {props.error}\r\n            </li>\r\n        )\r\n    }\r\n    else{\r\n        return(\r\n            <li className='error'>\r\n                {props.error}\r\n            </li>\r\n        )\r\n    }\r\n}\r\n    return (\r\n        <li className='error'>\r\n            'an error occured' \r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Notification","import React,{useState, useEffect} from 'react';\r\nimport pServices from './services/person'\r\nimport Notification from './components/Notification'\r\n\r\n// convert to lowercase and return items that match\r\nconst Names = (props) =>{\r\n  const people = props.persons\r\n  const filter = props.filter.toLowerCase()\r\n  if(Array.isArray(people)){\r\n  console.log(people)\r\n  console.log(typeof(people[0].name))\r\n  const fp = people.filter((x) =>x.name.toLowerCase().includes(filter))\r\n  if(typeof(fp ==='object')){ //if empty fp is undefined\r\n    const p = fp.map(x =><li key={x.id}>{x.name} {x.phonenumber} <button id={x.id} onClick={props.onClick}>delete</button></li>)\r\n    return(p)\r\n  }\r\n}\r\n  return('')\r\n}\r\n\r\nconst PhoneFilter =(props) =>{\r\n  //console.log(props)\r\n  return(\r\n    <>\r\n      filter showen with: <input value={props.filterName} onChange={props.handleFilterChange} />\r\n    </>\r\n  )\r\n}\r\n\r\nconst PersonForm =(props) =>{\r\n // console.log(props)\r\n  return(\r\n    <form onSubmit ={props.addName}>\r\n    <div>\r\n      name: <input value={props.newName} onChange={props.handlePersonChange}/>< br />\r\n      number: <input value={props.newPhone} onChange={props.handlePhoneChange} />\r\n    </div>\r\n    <div>\r\n      <button type=\"submit\">add</button>\r\n    </div>\r\n  </form>\r\n  )\r\n}\r\n\r\nconst  App = () => {\r\n  const [ persons, setPersons] = useState('')\r\n  const [ newPhone, setNewPhone] = useState('')\r\n  const [ newName, setNewName ] = useState('')\r\n  const [filterName, setFilterName] = useState('') \r\n  const [errorMsg, setErrorMsg] = useState(null)\r\n\r\n  useEffect(() =>{\r\n    console.log(\"effect called\")\r\n   pServices.getAll(persons,setPersons,setErrorMsg)\r\n\r\n  },[persons]\r\n  )\r\n  const addName = (event) =>{\r\n    console.log(\"add Name Called \")\r\n    event.preventDefault()\r\n    const p ={\r\n      name:newName,\r\n      id:Math.floor(Math.random()*4000000000),\r\n      phonenumber:newPhone\r\n    }\r\n    console.log(p)\r\n    const isNew = persons.findIndex((x) => x.name===p.name)\r\n    console.log(isNew)\r\n    if(isNew >=0 ){  \r\n      const astring = `${newName} update phone number?`\r\n      const changePhoneNumber = window.confirm(astring)\r\n      if(changePhoneNumber){\r\n        pServices.update(p,persons,setPersons,setNewName,setNewPhone,setErrorMsg)\r\n      }\r\n      \r\n    }\r\n    else{\r\n      pServices.add(p,persons,setPersons,setNewName,setNewPhone,setErrorMsg)\r\n    }\r\n  } \r\n  const handlePersonChange =(event) =>{\r\n    setNewName(event.target.value)\r\n  }\r\n  const handlePhoneChange =(event )=>{\r\n    setNewPhone(event.target.value)\r\n  }\r\n  const handleFilterChange = (event) =>{\r\n    setFilterName( event.target.value)\r\n  }\r\n  const handleClick =(event) =>{\r\n    const id =event.target.id\r\n    console.log(id,'  ',typeof(id))\r\n    const r = window.confirm(\"do you want to delete\")\r\n    if(r){\r\n      //find person and delete\r\n      if(Array.isArray(persons)){\r\n         const p = persons.filter((x) =>x.id===id)\r\n         console.log('delete',p)\r\n         pServices.del(p[0],persons,setPersons,setErrorMsg)\r\n         \r\n    }\r\n  }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Notification error ={errorMsg} />\r\n      <h2>Phonebook</h2>\r\n      <PhoneFilter filterName={filterName} handleFilterChange={handleFilterChange} />\r\n      <h2>Add a new </h2>\r\n      <PersonForm  \r\n      addName={addName} newName={newName} newPhone={newPhone} handlePersonChange={handlePersonChange} handlePhoneChange={handlePhoneChange}\r\n      />\r\n      <h2>Numbers</h2>\r\n      <Names persons={persons} filter={filterName} onClick={handleClick } />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}